{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/enums/character-types.enum.ts","webpack:///./src/app/initiative-controls/initiative-controls.component.html","webpack:///./src/app/initiative-controls/initiative-controls.component.sass","webpack:///./src/app/initiative-controls/initiative-controls.component.ts","webpack:///./src/app/initiative-tracker/initiative-tracker.component.html","webpack:///./src/app/initiative-tracker/initiative-tracker.component.sass","webpack:///./src/app/initiative-tracker/initiative-tracker.component.ts","webpack:///./src/app/models/character-preset.ts","webpack:///./src/app/models/initiative.ts","webpack:///./src/app/services/character-preset.service.ts","webpack:///./src/app/services/intitiative.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row mt-3\\\">\\r\\n    <div class=\\\"col\\\"></div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"navbar navbar-dark bg-dark\\\">\\r\\n        <span class=\\\"navbar-brand\\\">\\r\\n          Initiative Tracker\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-3\\\">\\r\\n    <div class=\\\"col-1\\\"></div>\\r\\n    <div class=\\\"col-5\\\">\\r\\n      <app-initiative-controls></app-initiative-controls>\\r\\n    </div>\\r\\n    <div class=\\\"col-5\\\">\\r\\n      <app-initiative-tracker></app-initiative-tracker>\\r\\n    </div>\\r\\n    <div class=\\\"col-1\\\"></div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n  title = 'InitiativeKeeper';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { InitiativeTrackerComponent } from './initiative-tracker/initiative-tracker.component';\r\nimport { InitiativeControlsComponent } from './initiative-controls/initiative-controls.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    InitiativeTrackerComponent,\r\n    InitiativeControlsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export enum CharacterTypes {\r\n    Player = \"Player\",\r\n    Npc = \"Npc\",\r\n    Enemy = \"Enemy\"\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <button class=\\\"col btn btn-primary btn mr-2\\\" (click)=\\\"next()\\\">Next</button>\\r\\n  <button class=\\\"col btn btn-secondary btn mr-2\\\" (click)=\\\"last()\\\">Last</button>\\r\\n  <button class=\\\"col btn btn-danger btn\\\" (click)=\\\"clear()\\\">Clear</button>\\r\\n</div>\\r\\n<div class=\\\"row mt-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <form class=\\\"input-group\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"add(f)\\\">\\r\\n      <input type=\\\"text\\\" aria-label=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" ngModel>\\r\\n      <input type=\\\"text\\\" name=\\\"initiative\\\" placeholder=\\\"Initiative\\\" class=\\\"form-control\\\" ngModel>\\r\\n      <select class=\\\"custom-select\\\" ngModel name=\\\"type\\\">\\r\\n        <option *ngFor=\\\"let type of types()\\\" [ngValue]=\\\"type\\\">{{type}}</option>\\r\\n      </select>\\r\\n      <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-outline-secondary\\\" id=\\\"button-addon2\\\">Add</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row mt-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    Presets\\r\\n    <form class=\\\"input-group\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"addPreset(f)\\\">\\r\\n      <input type=\\\"text\\\" aria-label=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" ngModel>\\r\\n      <select class=\\\"custom-select\\\" ngModel name=\\\"type\\\">\\r\\n        <option *ngFor=\\\"let type of types()\\\" [ngValue]=\\\"type\\\">{{type}}</option>\\r\\n      </select>\\r\\n      <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-outline-secondary\\\" id=\\\"button-addon2\\\">Add</button>\\r\\n      </div>\\r\\n    </form>\\r\\n    <form class=\\\"input-group mt-1\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"add(f)\\\" *ngFor=\\\"let character of characterPresets\\\">\\r\\n      <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"character.name\\\" readonly>\\r\\n      <input type=\\\"text\\\" name=\\\"type\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"character.type\\\" readonly>\\r\\n      <input type=\\\"text\\\" name=\\\"initiative\\\" placeholder=\\\"Initiative\\\" class=\\\"form-control\\\" ngModel>      \\r\\n      <div class=\\\"input-group-append\\\">\\r\\n        <button class=\\\"btn btn-outline-secondary\\\" id=\\\"button-addon2\\\">Add</button>\\r\\n        <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" (click)=\\\"removePreset(character)\\\">Remove</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaXRpYXRpdmUtY29udHJvbHMvaW5pdGlhdGl2ZS1jb250cm9scy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { IntitiativeService } from '../services/intitiative.service';\r\nimport { CharacterTypes } from '../enums/character-types.enum';\r\nimport { Initiative } from '../models/initiative';\r\nimport { NgForm } from '@angular/forms';\r\nimport { CharacterPreset } from '../models/character-preset';\r\nimport { CharacterPresetService } from '../services/character-preset.service';\r\n\r\n@Component({\r\n  selector: 'app-initiative-controls',\r\n  templateUrl: './initiative-controls.component.html',\r\n  styleUrls: ['./initiative-controls.component.sass']\r\n})\r\nexport class InitiativeControlsComponent implements OnInit {\r\n\r\n  name:string = \"\";\r\n  initiative:number = 0;\r\n  type:CharacterTypes = CharacterTypes.Player;\r\n\r\n  characterPresets:CharacterPreset[];\r\n\r\n  constructor(private initiativeService: IntitiativeService, private characterPresetService:CharacterPresetService) { }\r\n\r\n  ngOnInit() {\r\n    this.characterPresetService.get().subscribe(v => {\r\n      this.characterPresets = v;\r\n    })\r\n  }\r\n\r\n  next(){\r\n    this.initiativeService.nextInitiative();\r\n  }\r\n\r\n  last(){\r\n    this.initiativeService.lastInitiative();\r\n  }\r\n\r\n  clear(){\r\n    this.initiativeService.clear();\r\n  }\r\n\r\n  add(f: NgForm){\r\n    var initiative = new Initiative();\r\n    initiative.name = f.value.name;\r\n    initiative.initiative = Number(f.value.initiative);\r\n    initiative.type = f.value.type;\r\n    this.initiativeService.addInitiative(initiative);\r\n  }\r\n\r\n  addPreset(f: NgForm){\r\n    var character = new CharacterPreset();\r\n    character.name = f.value.name;\r\n    character.type = f.value.type;\r\n    this.characterPresetService.add(character);\r\n  }\r\n\r\n  removePreset(character:CharacterPreset){\r\n    this.characterPresetService.remove(character);\r\n  }\r\n\r\n  types() : string[]{\r\n    return Object.keys(CharacterTypes);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\" *ngFor=\\\"let intiative of initiatives\\\">\\r\\n  <div *ngIf=\\\"isPlayer(intiative.type)\\\" class=\\\"alert alert-primary alert-dismissible\\\">\\r\\n    <span>{{intiative.name}}</span>    \\r\\n    <button type=\\\"button\\\" class=\\\"close float-right ml-5\\\" (click)=\\\"remove(intiative)\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n    <span class=\\\"float-right\\\">{{intiative.initiative}}</span>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"isEnemy(intiative.type)\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\r\\n    <span>{{intiative.name}}</span>\\r\\n    <button type=\\\"button\\\" class=\\\"close float-right ml-5\\\" (click)=\\\"remove(intiative)\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n    <span class=\\\"float-right\\\">{{intiative.initiative}}</span>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"isNpc(intiative.type)\\\" class=\\\"alert alert-info alert-dismissible\\\">\\r\\n    <span>{{intiative.name}}</span>\\r\\n    <button type=\\\"button\\\" class=\\\"close float-right ml-5\\\" (click)=\\\"remove(intiative)\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n    <span class=\\\"float-right\\\">{{intiative.initiative}}</span>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaXRpYXRpdmUtdHJhY2tlci9pbml0aWF0aXZlLXRyYWNrZXIuY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Initiative } from '../models/initiative';\r\nimport { CharacterTypes } from '../enums/character-types.enum';\r\nimport { IntitiativeService } from '../services/intitiative.service';\r\n\r\n@Component({\r\n  selector: 'app-initiative-tracker',\r\n  templateUrl: './initiative-tracker.component.html',\r\n  styleUrls: ['./initiative-tracker.component.sass']\r\n})\r\nexport class InitiativeTrackerComponent implements OnInit {\r\n\r\n  constructor(private initiativeService: IntitiativeService) { }\r\n\r\n  initiatives: Initiative[] = [];\r\n\r\n  ngOnInit() {\r\n    var test = this.initiativeService.getInitiatives();\r\n    test.subscribe((result) => {\r\n      this.initiatives = result;\r\n    });\r\n    this.initiativeService.addInitiative({name:'Steve', initiative:10, type:CharacterTypes.Player});\r\n  }\r\n\r\n  isPlayer(type: CharacterTypes):boolean{\r\n    return type == CharacterTypes.Player;\r\n  }\r\n\r\n  isEnemy(type: CharacterTypes):boolean{\r\n    return type == CharacterTypes.Enemy;\r\n  }\r\n\r\n  isNpc(type: CharacterTypes): boolean{\r\n    return type == CharacterTypes.Npc;\r\n  }\r\n\r\n  remove(initiative: Initiative){\r\n    this.initiativeService.remove(initiative);\r\n  }\r\n}\r\n","import { CharacterTypes } from '../enums/character-types.enum';\n\nexport class CharacterPreset {\n    name:string;\n    type:CharacterTypes;\n}\n","import { CharacterTypes } from '../enums/character-types.enum';\r\n\r\nexport class Initiative {\r\n    initiative: number;\r\n    name: string;\r\n    type: CharacterTypes;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { CharacterPreset } from '../models/character-preset';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharacterPresetService {\n  \n  characterPresets: CharacterPreset[] = [];\n\n  constructor() {\n    this.characterPresets = JSON.parse(localStorage.getItem('presets'));\n  }\n\n  get(): Observable<CharacterPreset[]> {\n    return of(this.characterPresets);\n  }\n\n  add(character: CharacterPreset) {\n    this.characterPresets.push(character);\n    localStorage.setItem('presets', JSON.stringify(this.characterPresets));\n    console.log( JSON.stringify(this.characterPresets));\n  }\n\n  remove(character: CharacterPreset) {\n    var index = this.characterPresets.indexOf(character);\n    this.characterPresets.splice(index, 1);\n    localStorage.setItem('presets', JSON.stringify(this.characterPresets));\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Initiative } from '../models/initiative';\r\nimport { CharacterTypes } from '../enums/character-types.enum';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IntitiativeService {\r\n\r\n  initiatives: Initiative[] = [];\r\n\r\n  constructor() {   }\r\n\r\n  nextInitiative(){\r\n    if(this.initiatives.length == 0) return;\r\n    this.initiatives.push(this.initiatives.shift());\r\n  }\r\n\r\n  lastInitiative(){    \r\n    if(this.initiatives.length == 0) return;\r\n    this.initiatives.unshift(this.initiatives.pop());\r\n  }\r\n\r\n  addInitiative(initiative: Initiative){ \r\n    var index = 0;\r\n    for(index = 0; index < this.initiatives.length; ++index){      \r\n      if(initiative.initiative > this.initiatives[index].initiative){      \r\n        break;\r\n      }\r\n    }\r\n    var temp = this.initiatives.splice(index, this.initiatives.length - index);\r\n    this.initiatives.push(initiative);    \r\n    temp.forEach((v) => {\r\n      this.initiatives.push(v);\r\n    });\r\n  }\r\n\r\n  remove(initiative: Initiative){\r\n    var index = this.initiatives.indexOf(initiative);\r\n    this.initiatives.splice(index, 1);\r\n  }\r\n\r\n  sort(){\r\n    this.initiatives.sort((a, b) => {\r\n      if(a.initiative < b.initiative)\r\n        return 1;\r\n      if(a.initiative > b.initiative)\r\n        return -1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  getInitiatives(): Observable<Initiative[]> {\r\n    return of(this.initiatives);\r\n  }\r\n\r\n  clear(){\r\n    this.initiatives.splice(0, this.initiatives.length);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}