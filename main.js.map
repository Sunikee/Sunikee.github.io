{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/enums/character-types.enum.ts","webpack:///./src/app/initiative-controls/initiative-controls.component.html","webpack:///./src/app/initiative-controls/initiative-controls.component.sass","webpack:///./src/app/initiative-controls/initiative-controls.component.ts","webpack:///./src/app/initiative-tracker/initiative-tracker.component.html","webpack:///./src/app/initiative-tracker/initiative-tracker.component.sass","webpack:///./src/app/initiative-tracker/initiative-tracker.component.ts","webpack:///./src/app/models/initiative.ts","webpack:///./src/app/services/intitiative.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row mt-3\\\">\\n    <div class=\\\"col-1\\\"></div>\\n    <div class=\\\"col-5\\\">\\n      <app-initiative-controls></app-initiative-controls>\\n    </div>\\n    <div class=\\\"col-5\\\">\\n      <app-initiative-tracker></app-initiative-tracker>\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'InitiativeKeeper';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { InitiativeTrackerComponent } from './initiative-tracker/initiative-tracker.component';\nimport { InitiativeControlsComponent } from './initiative-controls/initiative-controls.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InitiativeTrackerComponent,\n    InitiativeControlsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum CharacterTypes {\n    Player = \"Player\",\n    Npc = \"Npc\",\n    Enemy = \"Enemy\"\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <button class=\\\"col btn btn-primary btn mr-2\\\" (click)=\\\"next()\\\">Next</button>\\n  <button class=\\\"col btn btn-secondary btn mr-2\\\" (click)=\\\"last()\\\">Last</button>\\n  <button class=\\\"col btn btn-danger btn\\\" (click)=\\\"clear()\\\">Clear</button>\\n</div>\\n<div class=\\\"row mt-3\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"input-group\\\">\\n      <input type=\\\"text\\\" aria-label=\\\"name\\\" placeholder=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\">\\n      <input type=\\\"text\\\" aria-label=\\\"initiative\\\" placeholder=\\\"Initiative\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"initiative\\\">\\n      <select class=\\\"custom-select\\\" [(ngModel)]=\\\"type\\\">\\n        <option *ngFor=\\\"let type of types()\\\" [ngValue]=\\\"type\\\">{{type}}</option>\\n      </select>\\n      <div class=\\\"input-group-append\\\">\\n        <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" id=\\\"button-addon2\\\" (click)=\\\"add()\\\">Add</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaXRpYXRpdmUtY29udHJvbHMvaW5pdGlhdGl2ZS1jb250cm9scy5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { IntitiativeService } from '../services/intitiative.service';\nimport { CharacterTypes } from '../enums/character-types.enum';\nimport { Initiative } from '../models/initiative';\n\n@Component({\n  selector: 'app-initiative-controls',\n  templateUrl: './initiative-controls.component.html',\n  styleUrls: ['./initiative-controls.component.sass']\n})\nexport class InitiativeControlsComponent implements OnInit {\n\n  name:string = \"\";\n  initiative:number = 0;\n  type:CharacterTypes = CharacterTypes.Player;\n\n  constructor(private initiativeService: IntitiativeService) { }\n\n  ngOnInit() {\n  }\n\n  next(){\n    this.initiativeService.nextInitiative();\n  }\n\n  last(){\n    this.initiativeService.lastInitiative();\n  }\n\n  clear(){\n    this.initiativeService.clear();\n  }\n\n  add(){\n    var initiative = new Initiative();\n    initiative.name = this.name;\n    initiative.initiative = this.initiative;\n    initiative.type = this.type;\n    this.initiativeService.addInitiative(initiative);\n  }\n\n  types() : string[]{\n    return Object.keys(CharacterTypes);\n  }\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\" *ngFor=\\\"let intiative of initiatives\\\">\\n  <div *ngIf=\\\"isPlayer(intiative.type)\\\" class=\\\"alert alert-primary\\\"><span>{{intiative.name}}</span><span class=\\\"float-right\\\">{{intiative.initiative}}</span></div>\\n  <div *ngIf=\\\"isEnemy(intiative.type)\\\" class=\\\"alert alert-danger\\\"><span>{{intiative.name}}</span><span class=\\\"float-right\\\">{{intiative.initiative}}</span></div>\\n  <div *ngIf=\\\"isNpc(intiative.type)\\\" class=\\\"alert alert-info\\\"><span>{{intiative.name}}</span><span class=\\\"float-right\\\">{{intiative.initiative}}</span></div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luaXRpYXRpdmUtdHJhY2tlci9pbml0aWF0aXZlLXRyYWNrZXIuY29tcG9uZW50LnNhc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Initiative } from '../models/initiative';\nimport { CharacterTypes } from '../enums/character-types.enum';\nimport { IntitiativeService } from '../services/intitiative.service';\n\n@Component({\n  selector: 'app-initiative-tracker',\n  templateUrl: './initiative-tracker.component.html',\n  styleUrls: ['./initiative-tracker.component.sass']\n})\nexport class InitiativeTrackerComponent implements OnInit {\n\n  constructor(private initiativeService: IntitiativeService) { }\n\n  initiatives: Initiative[] = [];\n\n  ngOnInit() {\n    var test = this.initiativeService.getInitiatives();\n    test.subscribe((result) => {\n      this.initiatives = result;\n    });\n  }\n\n  isPlayer(type: CharacterTypes):boolean{\n    return type == CharacterTypes.Player;\n  }\n\n  isEnemy(type: CharacterTypes):boolean{\n    return type == CharacterTypes.Enemy;\n  }\n\n  isNpc(type: CharacterTypes): boolean{\n    return type == CharacterTypes.Npc;\n  }\n}\n","import { CharacterTypes } from '../enums/character-types.enum';\n\nexport class Initiative {\n    initiative: number;\n    name: string;\n    type: CharacterTypes;\n}\n","import { Injectable } from '@angular/core';\nimport { Initiative } from '../models/initiative';\nimport { CharacterTypes } from '../enums/character-types.enum';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntitiativeService {\n\n  initiatives: Initiative[] = [];\n\n  constructor() {   }\n\n  nextInitiative(){\n    if(this.initiatives.length == 0) return;\n    this.initiatives.push(this.initiatives.shift());\n  }\n\n  lastInitiative(){    \n    if(this.initiatives.length == 0) return;\n    this.initiatives.unshift(this.initiatives.pop());\n  }\n\n  addInitiative(initiative: Initiative){ \n    var index = 0;\n    for(index = 0; index < this.initiatives.length; ++index){      \n      if(initiative.initiative > this.initiatives[index].initiative){      \n        break;\n      }\n    }   \n    var temp = this.initiatives.splice(index, this.initiatives.length - index);\n    this.initiatives.push(initiative);    \n    temp.forEach((v) => {\n      this.initiatives.push(v);\n    });\n  }\n\n  sort(){\n    this.initiatives.sort((a, b) => {\n      if(a.initiative < b.initiative)\n        return 1;\n      if(a.initiative > b.initiative)\n        return -1;\n      return 0;\n    });\n  }\n\n  getInitiatives(): Observable<Initiative[]> {\n    return of(this.initiatives);\n  }\n\n  clear(){\n    this.initiatives.splice(0, this.initiatives.length);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}